service: websockets-chat 

custom:
  stage: ${opt:stage, self:provider.stage}
  NAMES_DYNAMODB_TABLE: wobSocketChatTable-${self:custom.stage}
  settings:
    dev:
      STAGE: ${self:custom.stage}
    prod:
      STAGE: ${self:custom.stage}

provider:
  name: aws
  runtime: nodejs12.x
  environment: ${self:custom.settings.${self:custom.stage}}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
      Resource:
        - Fn::GetAtt: [ChatTable, Arn]
    - Effect: Allow
      Action:
        - "execute-api:ManageConnections"
      Resource:
        - "arn:aws:execute-api:*:*:**/@connections/*"

functions:
  connectionHandler:
    handler: handler.connectionHandler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  defaultHandler:
    handler: handler.defaultHandler
    events:
      - websocket:
          route: $default
  sendMessageHandler:
    handler: handler.sendMessageHandler
    events:
      - websocket:
          route: sendMessage
  singleMessageHandler:
    handler: handler.singleMessageHandler
    events:
      - websocket:
          route: singleMessage        

resources:
  Resources:
    ChatTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.NAMES_DYNAMODB_TABLE}        